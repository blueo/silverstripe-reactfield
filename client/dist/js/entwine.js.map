{"version":3,"sources":["webpack:///webpack/bootstrap e74227a718b98243643d","webpack:///external \"Injector\"","webpack:///external \"React\"","webpack:///external \"ReactDom\"","webpack:///external \"jQuery\"","webpack:///external \"schemaFieldValues\"","webpack:///./client/src/js/entwine/Forms/ReactFieldEntwine.js"],"names":["FieldName","$","entwine","Timer","Component","Value","onmatch","_super","cmsContent","closest","attr","context","Field","setComponent","state","data","setValue","value","refresh","onunmatch","container","ReactDOM","unmountComponentAtNode","props","getAttributes","form","onChange","clearTimeout","getTimer","timer","setTimeout","trigger","setTimer","getComponent","render","getValue","schema"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,0B;;;;;;ACAA,uB;;;;;;;ACAA,0B;;;;;;ACAA,wB;;;;;;ACAA,mC;;;;;;;;;;;;;ACAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,YAAY,YAAlB;;AAUAC,iBAAEC,OAAF,CAAU,IAAV,EAAgB,UAACD,CAAD,EAAO;AACrBA,4BAAwBD,SAAxB,EAAqCE,OAArC,CAA6C;AAC3CC,WAAO,IADoC;AAE3CC,eAAW,IAFgC;AAG3CC,WAAO,IAHoC;;AAK3CC,aAAS,mBAAW;AAClB,WAAKC,MAAL;;AAEA,UAAMC,aAAa,KAAKC,OAAL,CAAa,cAAb,EAA6BC,IAA7B,CAAkC,IAAlC,CAAnB;AACA,UAAMC,UAAWH,UAAD,GACZ,EAAEG,SAASH,UAAX,EADY,GAEZ,EAFJ;;AAKA,UAAMI,QAAQ,6BAAcZ,SAAd,EAAyBW,OAAzB,CAAd;AACA,WAAKE,YAAL,CAAkBD,KAAlB;;AAEA,UAAME,QAAQ,KAAKC,IAAL,CAAU,OAAV,KAAsB,EAApC;AACA,WAAKC,QAAL,CAAcF,MAAMG,KAAN,GAAcH,MAAMG,KAApB,GAA4B,EAA1C;;AAEA,WAAKC,OAAL;AACD,KArB0C;;AAuB3CC,aAvB2C,uBAuB/B;AACV,WAAKZ,MAAL;;AAEA,UAAMa,YAAY,KAAK,CAAL,CAAlB;AACA,UAAIA,SAAJ,EAAe;AACbC,2BAASC,sBAAT,CAAgCF,SAAhC;AACD;AACF,KA9B0C;AAgC3CF,WAhC2C,qBAgCjC;AAAA;;AACR,UAAMK,QAAQ,KAAKC,aAAL,EAAd;AACA,UAAMC,OAAOxB,EAAE,IAAF,EAAQQ,OAAR,CAAgB,MAAhB,CAAb;;AAEA,UAAMiB,WAAW,SAAXA,QAAW,CAACT,KAAD,EAAW;AAC1B,cAAKD,QAAL,CAAcC,KAAd;;AAEA,cAAKC,OAAL;;AAEAS,qBAAa,MAAKC,QAAL,EAAb;AACA,YAAMC,QAAQC,WAAW,YAAM;AAC7BL,eAAKM,OAAL,CAAa,QAAb;AACD,SAFa,EAEX,CAFW,CAAd;AAGA,cAAKC,QAAL,CAAcH,KAAd;AACD,OAVD;;AAYA,UAAMjB,QAAQ,KAAKqB,YAAL,EAAd;;AAEAZ,yBAASa,MAAT,CACE,8BAAC,KAAD,eACMX,KADN;AAEE,kBAAUG,QAFZ;AAGE,eAAO,KAAKS,QAAL,EAHT;AAIE;AAJF,SADF,EAOE,KAAK,CAAL,CAPF;AASD,KA3D0C;AAmE3CX,iBAnE2C,2BAmE3B;AACd,UAAMV,QAAQb,EAAE,IAAF,EAAQc,IAAR,CAAa,OAAb,CAAd;AACA,UAAMqB,SAASnC,EAAE,IAAF,EAAQc,IAAR,CAAa,QAAb,CAAf;AACA,aAAO,oCAAYqB,MAAZ,EAAoBtB,KAApB,CAAP;AACD;AAvE0C,GAA7C;AAyED,CA1ED,E","file":"entwine.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e74227a718b98243643d","module.exports = Injector;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Injector\"\n// module id = 0\n// module chunks = 0 1","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0 1","module.exports = ReactDom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDom\"\n// module id = 3\n// module chunks = 0","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 4\n// module chunks = 0","module.exports = schemaFieldValues;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"schemaFieldValues\"\n// module id = 5\n// module chunks = 0","import $ from 'jquery';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { schemaMerge } from 'lib/schemaFieldValues';\nimport { loadComponent } from 'lib/Injector';\n\nconst FieldName = 'ReactField';\n\n/**\n * Shiv for inserting react field into entwine forms\n * Based on TreeDropdownField\n * NB, your component should be registered with injector, @see boot/registerComponents.js\n *\n * @TODO validate the need for the afterformsubmission\n * Also @see LeftAndMain.KeyValueField.js for reloading behaviour after form submission\n */\n$.entwine('ss', ($) => {\n  $(`.js-injector-boot .${FieldName}`).entwine({\n    Timer: null,\n    Component: null,\n    Value: null,\n\n    onmatch: function() {\n      this._super();\n\n      const cmsContent = this.closest('.cms-content').attr('id');\n      const context = (cmsContent)\n        ? { context: cmsContent }\n        : {};\n\n      // get component from Injector\n      const Field = loadComponent(FieldName, context);\n      this.setComponent(Field);\n\n      const state = this.data('state') || {};\n      this.setValue(state.value ? state.value : {});\n\n      this.refresh();\n    },\n\n    onunmatch() {\n      this._super();\n      // solves errors given by ReactDOM \"no matched root found\" error.\n      const container = this[0];\n      if (container) {\n        ReactDOM.unmountComponentAtNode(container);\n      }\n    },\n\n    refresh() {\n      const props = this.getAttributes();\n      const form = $(this).closest('form');\n\n      const onChange = (value) => {\n        this.setValue(value);\n\n        this.refresh();\n        // Trigger change detection (see jquery.changetracker.js)\n        clearTimeout(this.getTimer());\n        const timer = setTimeout(() => {\n          form.trigger('change');\n        }, 0);\n        this.setTimer(timer);\n      };\n\n      const Field = this.getComponent();\n\n      ReactDOM.render(\n        <Field\n          {...props}\n          onChange={onChange}\n          value={this.getValue()}\n          noHolder\n        />,\n        this[0],\n      );\n    },\n\n    /**\n     * Find the selected node and get attributes associated to attach\n     * the data to the component props\n     *\n     * @returns {Object}\n     */\n    getAttributes() {\n      const state = $(this).data('state');\n      const schema = $(this).data('schema');\n      return schemaMerge(schema, state);\n    }\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/js/entwine/Forms/ReactFieldEntwine.js"],"sourceRoot":""}